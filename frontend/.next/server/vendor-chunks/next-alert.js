"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/next-alert";
exports.ids = ["vendor-chunks/next-alert"];
exports.modules = {

/***/ "(ssr)/./node_modules/next-alert/dist/index.js":
/*!***********************************************!*\
  !*** ./node_modules/next-alert/dist/index.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/* __next_internal_client_entry_do_not_use__  cjs */ \nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all)=>{\n    for(var name in all)__defProp(target, name, {\n        get: all[name],\n        enumerable: true\n    });\n};\nvar __copyProps = (to, from, except, desc)=>{\n    if (from && typeof from === \"object\" || typeof from === \"function\") {\n        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n            get: ()=>from[key],\n            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n        });\n    }\n    return to;\n};\nvar __toCommonJS = (mod)=>__copyProps(__defProp({}, \"__esModule\", {\n        value: true\n    }), mod);\n// src/index.tsx\nvar src_exports = {};\n__export(src_exports, {\n    AlertProvider: ()=>AlertProvider,\n    Alerts: ()=>Alerts,\n    useAlert: ()=>useAlert\n});\nmodule.exports = __toCommonJS(src_exports);\n// src/components/Alert.tsx\nvar import_react2 = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n// src/components/AlertContext.tsx\nvar import_react = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\nvar import_jsx_runtime = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\nvar AlertContext = (0, import_react.createContext)(void 0);\nvar AlertProvider = ({ children })=>{\n    const [alerts, setAlerts] = (0, import_react.useState)([]);\n    const addAlert = (title, message, type, passFunction)=>{\n        const newAlert = {\n            id: Date.now(),\n            message,\n            type,\n            title\n        };\n        setAlerts((prevAlerts)=>[\n                ...prevAlerts,\n                newAlert\n            ]);\n    };\n    const removeAlert = (id)=>{\n        setAlerts((prevAlerts)=>prevAlerts.filter((alert)=>alert.id !== id));\n    };\n    const clearAlerts = ()=>{\n        setAlerts([]);\n    };\n    return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(AlertContext.Provider, {\n        value: {\n            alerts,\n            addAlert,\n            removeAlert,\n            clearAlerts\n        },\n        children\n    });\n};\nvar useAlert = ()=>{\n    const context = (0, import_react.useContext)(AlertContext);\n    if (!context) {\n        throw new Error(\"useAlert must be used within an AlertProvider\");\n    }\n    return context;\n};\n// src/components/Alert.tsx\nvar import_framer_motion = __webpack_require__(/*! framer-motion */ \"(ssr)/./node_modules/framer-motion/dist/cjs/index.js\");\nvar import_jsx_runtime2 = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\nvar Alert = ({ idElement, message, idDelay, type = \"success\", duration = 3e3, title, children, passFunction, direction = \"right\", ...restProps })=>{\n    const { removeAlert } = useAlert();\n    (0, import_react2.useEffect)(()=>{\n        setTimeout(()=>{\n            removeAlert(idElement);\n            if (passFunction) {\n                passFunction();\n            }\n        }, // set delay if user click to fast\n        duration + idDelay * 500);\n    }, [\n        idElement,\n        removeAlert\n    ]);\n    const colorOfAlert = type === \"success\" && {\n        backgroundColor: \"#16a34a\"\n    } || type === \"error\" && {\n        backgroundColor: \"#ef4444\"\n    } || type === \"warning\" && {\n        backgroundColor: \"#facc15\"\n    } || type === \"info\" && {\n        backgroundColor: \"#0ea5e9\"\n    };\n    const directionOfAlert = direction === \"left\" && {\n        x: -100\n    } || direction === \"right\" && {\n        x: 100\n    } || direction === \"top\" && {\n        y: -100\n    } || direction === \"bottom\" && {\n        y: 100\n    };\n    const directionOfAlertXY = direction === \"left\" && {\n        x: 0\n    } || direction === \"right\" && {\n        x: 0\n    } || direction === \"top\" && {\n        y: 0\n    } || direction === \"bottom\" && {\n        y: 0\n    };\n    return /* @__PURE__ */ (0, import_jsx_runtime2.jsxs)(import_framer_motion.motion.div, {\n        ...restProps,\n        initial: {\n            ...directionOfAlert,\n            opacity: 0\n        },\n        animate: {\n            ...directionOfAlertXY,\n            opacity: 1\n        },\n        exit: {\n            ...directionOfAlert,\n            opacity: 0\n        },\n        style: {\n            overflow: \"hidden\",\n            ...colorOfAlert,\n            color: \"white\",\n            width: \"15rem\",\n            padding: \"1rem\",\n            margin: \"0.5rem\",\n            minWidth: \"fit-content\"\n        },\n        children: [\n            /* @__PURE__ */ (0, import_jsx_runtime2.jsx)(\"div\", {\n                style: {\n                    \"position\": \"absolute\",\n                    \"top\": \"0\",\n                    \"left\": \"0\",\n                    \"width\": \"100%\"\n                },\n                children: /* @__PURE__ */ (0, import_jsx_runtime2.jsx)(import_framer_motion.motion.div, {\n                    initial: {\n                        width: 0\n                    },\n                    animate: {\n                        width: \"100%\"\n                    },\n                    transition: {\n                        duration: duration / 1e3\n                    },\n                    style: {\n                        height: \"0.3rem\",\n                        opacity: 0.5,\n                        backgroundColor: \"white\"\n                    }\n                })\n            }),\n            children,\n            /* @__PURE__ */ (0, import_jsx_runtime2.jsx)(\"h1\", {\n                children: /* @__PURE__ */ (0, import_jsx_runtime2.jsx)(\"b\", {\n                    children: title\n                })\n            }),\n            /* @__PURE__ */ (0, import_jsx_runtime2.jsx)(\"p\", {\n                children: message\n            })\n        ]\n    });\n};\n// src/components/Alerts.tsx\nvar import_framer_motion2 = __webpack_require__(/*! framer-motion */ \"(ssr)/./node_modules/framer-motion/dist/cjs/index.js\");\nvar import_jsx_runtime3 = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\nvar Alerts = ({ position = \"top-right\", direction = \"right\", timer = 3e3, children, ...props })=>{\n    const { alerts } = useAlert();\n    const positionStyle = position === \"bottom-left\" && {\n        bottom: 0,\n        left: 0\n    } || position === \"bottom-right\" && {\n        bottom: 0,\n        right: 0\n    } || position === \"top-left\" && {\n        top: 0,\n        left: 0\n    } || position === \"top-right\" && {\n        top: 0,\n        right: 0\n    } || position === \"center-top\" && {\n        top: 0,\n        left: \"50%\",\n        transform: \"translateX(-50%)\"\n    } || position === \"center-bottom\" && {\n        bottom: 0,\n        left: \"50%\",\n        transform: \"translateX(-50%)\"\n    };\n    return /* @__PURE__ */ (0, import_jsx_runtime3.jsx)(\"div\", {\n        style: {\n            \"display\": \"flex\",\n            \"overflow\": \"hidden\",\n            \"position\": \"fixed\",\n            \"padding\": \"1rem\",\n            \"flexDirection\": \"column\",\n            \"justifyContent\": \"flex-end\",\n            \"alignItems\": \"flex-end\",\n            \"width\": \"fit-content\",\n            ...positionStyle\n        },\n        children: /* @__PURE__ */ (0, import_jsx_runtime3.jsx)(import_framer_motion2.AnimatePresence, {\n            children: alerts.map((alert, i)=>/* @__PURE__ */ (0, import_jsx_runtime3.jsx)(Alert, {\n                    idDelay: i,\n                    title: alert.title,\n                    idElement: alert.id,\n                    message: alert.message,\n                    direction,\n                    type: alert.type,\n                    duration: timer,\n                    passFunction: alert.passFunction,\n                    ...props,\n                    children\n                }, alert.id))\n        })\n    });\n};\n// Annotate the CommonJS export names for ESM import in node:\n0 && (0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next-alert/dist/index.js\n");

/***/ })

};
;